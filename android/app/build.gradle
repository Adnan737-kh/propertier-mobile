plugins {
    id "com.android.application"
    // START: FlutterFire Configuration
    id 'com.google.gms.google-services'
    // END: FlutterFire Configuration
    id "kotlin-android"
    id "dev.flutter.flutter-gradle-plugin"
    
}

def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '24'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.10.3'
}
 def keystoreProperties = new Properties()
  def keystorePropertiesFile = rootProject.file('key.properties')
   if (keystorePropertiesFile.exists()) {
      keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
   }
android {
    namespace "com.propertier.propertiercom"
    compileSdkVersion 34
    ndkVersion flutter.ndkVersion
    

    compileOptions {
        coreLibraryDesugaringEnabled true
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }

    defaultConfig {
        multiDexEnabled true
        // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).
        applicationId "com.propertier.propertiercom"
        // You can update the following values to match your application needs.
        // For more information, see: https://docs.flutter.dev/deployment/android#reviewing-the-gradle-build-configuration.
        minSdkVersion 24
        targetSdkVersion 34
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName

        multiDexEnabled true
    }

signingConfigs {
       release {
          keyAlias keystoreProperties['rekeyAlias']
          keyPassword keystoreProperties['rekeyPassword']
          storeFile keystoreProperties['restoreFile'] ? file(keystoreProperties['restoreFile']) : null
          storePassword keystoreProperties['restorePassword']
      }
      debug {
          keyAlias keystoreProperties['keyAlias']
          keyPassword keystoreProperties['keyPassword']
          storeFile keystoreProperties['storeFile'] ? file(keystoreProperties['storeFile']) : null
          storePassword keystoreProperties['storePassword']
      }
   }
   buildTypes {
      release {
         // TODO: Add your own signing config for the release build.
         // Signing with the debug keys for now,
         // so `flutter run --release` works.
//          signingConfig signingConfigs.debug
          signingConfig signingConfigs.release
      }
   }
}

flutter {
    source '../..'
}

dependencies {
        implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
        implementation 'com.google.android.play:integrity:1.2.0'
        implementation platform("com.google.firebase:firebase-bom:32.3.1")
        implementation "com.google.firebase:firebase-auth-ktx"
        implementation 'com.facebook.android:facebook-login:latest.release'
        coreLibraryDesugaring 'com.android.tools:desugar_jdk_libs:1.2.2'
        implementation 'com.huawei.agconnect:agconnect-core:1.5.2.300'
}
apply plugin: 'com.google.gms.google-services'
apply plugin: 'com.huawei.agconnect'